name: Build and Deploy to Nuget

on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Pack
        run: |
          BRANCH="${GITHUB_REF##*/}"
          COMMIT_SHORT_SHA=`git rev-parse --short ${GITHUB_SHA}`
          COMMIT_COUNT=`git rev-list --count HEAD`
          COMMIT_TIME=`git show -s --format=%ct HEAD`
          if [ "$BRANCH" = "main" ]; then
            dotnet pack --no-dependencies -c Release
          else
            dotnet pack --no-dependencies -c Debug --version-suffix ${BRANCH}.${COMMIT_TIME}+${COMMIT_SHORT_SHA}
          fi
      - name: Find Package
        run: |
          mkdir -p ./packages
          find ** -type f -regex '.*\.s?nupkg' -exec mv {} ./packages/ \;
      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: ./packages

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Add NuGet Source
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "${{ secrets.NUGET_API_URL }}"
      - name: Push packages
        run: find ** -type f -regex '.*\.s?nupkg' -exec dotnet nuget push -s "github" -k ${{ secrets.CI_TOKEN }} --skip-duplicate {} \;
